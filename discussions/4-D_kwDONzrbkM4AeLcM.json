{"id":"D_kwDONzrbkM4AeLcM","title":"如何解决 iOS 系统中 double 转 NSString 精度丢失问题","body":"在日常开发中，后台经常返回带小数的数字，我们通常使用 `float` 或 `double` 类型来接收这些数据。然而，当我们将这些数字展示给用户时，可能会因为精度丢失而导致显示错误。\r\n\r\n## 问题描述\r\n\r\n假设后台返回的数据如下：\r\n\r\n```json\r\n{\r\n  \"double\": 79.04\r\n}\r\n```\r\n\r\n当我们将该数据解析为字典并转换为字符串时，可能会遇到精度丢失的问题。例如：\r\n\r\n```objc\r\nNSDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:0 error:nil];\r\nNSString *result = [NSString stringWithFormat:@\"%@\", dic[@\"double\"]];\r\n\r\n//期望结果：\"79.04\"\r\n//实际结果：\"79.04000000000001\"\r\n```\r\n\r\n在这个例子中，后台返回的数字是 `79.04`，当我们将其转换为字符串时，期望的结果是 \"79.04\"，但实际结果却是 \"79.04000000000001\"。这就是精度丢失的表现。\r\n\r\n## 原因分析\r\n\r\n这种问题通常发生在直接使用 `double` 类型进行字符串转换时。由于 `double` 类型用于表示浮动小数，而它的二进制表示可能会产生精度误差，导致转化为字符串时出现不准确的结果。\r\n\r\n## 解决办法\r\n\r\n虽然可以通过控制小数位数来规避精度异常，但这种方法并不总是有效，因为我们无法预知后台返回的数字格式。\r\n\r\n为了解决这一问题，可以使用 `NSDecimalNumber` 类，这是苹果提供的用于处理精确小数的类，它能有效避免精度丢失。\r\n\r\n```objc\r\ndouble d = [dic[@\"double\"] doubleValue];\r\nNSString *dStr = [NSString stringWithFormat:@\"%f\", d];\r\nNSDecimalNumber *dn = [NSDecimalNumber decimalNumberWithString:dStr];\r\nNSString *result = [NSString stringWithFormat:@\"%@\", dn.stringValue];\r\n\r\n//期望结果：\"79.04\"\r\n//实际结果：\"79.04\"\r\n```\r\n\r\n可以看到，通过 `NSDecimalNumber` 转换后，精度问题得到了有效解决，结果与预期一致。\r\n\r\n## 最后\r\n\r\n在处理浮动小数时，尽量避免直接使用 `double` 类型进行字符串转换。使用 `NSDecimalNumber` 不仅能避免精度丢失问题，还能确保数据转换的精确性。\r\n\r\n希望本篇文章能帮助你解决类似的精度问题，提升代码的稳定性和可靠性。\r\n","number":4,"labels":{"nodes":[{"id":"LA_kwDONzrbkM8AAAAB4nYwyw","name":"iOS","url":"https://github.com/onnttf/blog/labels/iOS"}]},"category":{"id":"DIC_kwDONzrbkM4Cmnbf","name":"Show and tell","slug":"show-and-tell","emoji":":raised_hands:","emojiHTML":"<div>🙌</div>"},"author":{"login":"onnttf"},"authorAssociation":"OWNER","createdAt":"2017-09-08T08:00:00Z","updatedAt":"2025-02-03T15:29:39Z","repository":{"id":"R_kgDONzrbkA","url":"https://github.com/onnttf/blog"},"url":"https://github.com/onnttf/blog/discussions/4","jsonFilePath":"discussions/4-D_kwDONzrbkM4AeLcM.json","markdownFilePath":"2017/09/4-D_kwDONzrbkM4AeLcM.md"}

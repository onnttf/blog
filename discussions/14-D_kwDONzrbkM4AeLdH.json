{"id":"D_kwDONzrbkM4AeLdH","title":"动态更换 App 图标","body":"从 `iOS 10.3` 开始，Apple 提供了动态更换应用图标的功能。这个功能让我们可以在不发版的情况下更换 App 图标，但也有一些限制需要注意：\r\n\r\n1. 所有可替换的图标必须预先打包到项目中\r\n2. 更换图标时需要获得用户授权（虽然有绕过方法但不建议使用）\r\n\r\n尽管存在这些限制，但这个功能仍然能为用户体验带来显著提升：\r\n\r\n1. 在节假日期间可以无需发版即可更换应季图标\r\n2. 在重大活动期间可以及时更换营销图标，无需担心发版风险\r\n\r\n**注意**：更换图标会同步更新应用在通知栏、设置界面等所有场景下的图标。\r\n\r\n## 准备替换图标\r\n\r\n需要将待替换的图标文件放在项目目录下（不能放在 `.xcassets` 中）。建议按如下格式命名图标文件：\r\n例如 `<xx20x20@2x.png>`、`<xx20x20@3x.png>` 等，这样在配置 `Info.plist` 时会更方便。\r\n\r\n![image](https://file.onnttf.site/2018/07/10/1.jpg)\r\n\r\n**提示**：理论上也可以只提供一套图标文件，命名为 `<xx@2x.png>`、`<xx@3x.png>` 等。但为了更好的显示效果，建议提供完整的尺寸系列。因为系统会对大尺寸图标进行压缩来适配小尺寸场景。\r\n\r\n## 修改 `Info.plist`\r\n\r\n要实现动态换图标功能，需要在 `Info.plist` 中进行必要的配置：\r\n\r\n![image](https://file.onnttf.site/2018/07/10/2.jpg)\r\n\r\n- CFBundleIcons\r\n\r\n  包含所有应用图标信息的字典\r\n\r\n- CFBundlePrimaryIcon\r\n\r\n  主图标配置，如果在 `Assets.xcassets` 中已配置则会被自动使用\r\n\r\n- CFBundleAlternateIcons\r\n\r\n  可替换图标的配置数组\r\n\r\n- UIPrerenderedIcon\r\n\r\n  是否预渲染，若未设置或设为 `NO` 则系统会自动添加光泽效果\r\n\r\n详细的配置说明请参考 [CFBundleIcons, CFBundlePrimaryIcon, CFBundleAlternateIcons](https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/TP40009249-SW10)。\r\n\r\n**注意**：如需支持 iPad，需要在 `CFBundleIcons~ipad` 中进行相同配置。\r\n\r\n## 编写代码\r\n\r\n系统提供了以下几个关键 `API`：\r\n\r\n```objc\r\n// If false, alternate icons are not supported for the current process.\r\n// 检查是否支持更换图标\r\n@property (readonly, nonatomic) BOOL supportsAlternateIcons NS_EXTENSION_UNAVAILABLE(\"Extensions may not have alternate icons\") API_AVAILABLE(ios(10.3), tvos(10.2));\r\n\r\n// Pass `nil` to use the primary application icon. The completion handler will be invoked asynchronously on an arbitrary background queue; be sure to dispatch back to the main queue before doing any further UI work.\r\n// 更换图标\r\n- (void)setAlternateIconName:(nullable NSString *)alternateIconName completionHandler:(nullable void (^)(NSError *_Nullable error))completionHandler NS_EXTENSION_UNAVAILABLE(\"Extensions may not have alternate icons\") API_AVAILABLE(ios(10.3), tvos(10.2));\r\n\r\n// If `nil`, the primary application icon is being used.\r\n// 当前图标的名称\r\n@property (nullable, readonly, nonatomic) NSString *alternateIconName NS_EXTENSION_UNAVAILABLE(\"Extensions may not have alternate icons\") API_AVAILABLE(ios(10.3), tvos(10.2));\r\n```\r\n\r\n这些 `API` 使用起来相对简单，需要特别注意的是：\r\n\r\n```objc\r\n- (void)setAlternateIconName:(nullable NSString *)alternateIconName completionHandler:(nullable void (^)(NSError *_Nullable error))completionHandler\r\n```\r\n\r\n其中的 `alternateIconName` 参数需要与 `Info.plist` 中配置的名称保持一致，如示例中的 `female` 或 `male`。\r\n\r\n## 代码示例\r\n\r\n以下是一个完整的图标管理工具类实现。您也可以在 [DynamicAppIconDemo](https://github.com/onnttf/DynamicAppIconDemo) 查看 `FSAppIconManager` 的源码：\r\n\r\n```objc\r\n+ (NSString *)getCurrentAppIconName {\r\n    if (@available(iOS 10.3, *)) {\r\n        return ([UIApplication sharedApplication].alternateIconName.length == 0) ? @\"\" : [UIApplication sharedApplication].alternateIconName;\r\n    } else {\r\n        // Fallback on earlier versions\r\n        return @\"\";\r\n    }\r\n}\r\n\r\n+ (BOOL)canChangeAppIcon {\r\n    if (@available(iOS 10.3, *)) {\r\n        return [[UIApplication sharedApplication] supportsAlternateIcons];\r\n    } else {\r\n        // Fallback on earlier versions\r\n        return NO;\r\n    }\r\n}\r\n\r\n+ (void)changeAppIconWithIconName:(NSString *)iconName completionHandler:(void (^)(NSError * _Nullable))completionHandler {\r\n    if (@available(iOS 10.3, *)) {\r\n        [[UIApplication sharedApplication] setAlternateIconName:iconName completionHandler:^(NSError * _Nullable error) {\r\n            if (!error) {\r\n                completionHandler(nil);\r\n            } else {\r\n                completionHandler(error);\r\n            }\r\n        }];\r\n    } else {\r\n        // Fallback on earlier versions\r\n        NSDictionary *userInfo = @{\r\n            NSLocalizedDescriptionKey: NSLocalizedString(@\"AppIcon change failed\", nil),\r\n            NSLocalizedFailureReasonErrorKey: NSLocalizedString(@\"The current system version does not support replacing the AppIcon.\", nil),\r\n            NSLocalizedRecoverySuggestionErrorKey: NSLocalizedString(@\"\", nil)\r\n        };\r\n        NSError *error = [NSError errorWithDomain:@\"\"\r\n                                             code:34001\r\n                                         userInfo:userInfo];\r\n        completionHandler(error);\r\n    }\r\n}\r\n```\r\n\r\n## App Icon 相关的资料\r\n\r\n### 属性要求\r\n\r\n| Attribute   | Value                                                                                                                                                  |\r\n| :---------- | :----------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| Format      | PNG                                                                                                                                                    |\r\n| Color space | sRGB or P3 (see [Color Management](https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/color/#color-management))           |\r\n| Layers      | Flattened with no transparency                                                                                                                         |\r\n| Resolution  | Varies. See [Image Size and Resolution](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/image-size-and-resolution/) |\r\n| Shape       | Square with no rounded corners                                                                                                                         |\r\n\r\n### 尺寸规格\r\n\r\n| Device or context | Icon size                             |\r\n| :---------------- | :------------------------------------ |\r\n| iPhone            | 180px × 180px (60pt × 60pt @3x)       |\r\n|                   | 120px × 120px (60pt × 60pt @2x)       |\r\n| iPad Pro          | 167px × 167px (83.5pt × 83.5pt @2x)   |\r\n| iPad, iPad mini   | 152px × 152px (76pt × 76pt @2x)       |\r\n| App Store         | 1024px × 1024px (1024pt × 1024pt @1x) |\r\n\r\n### Spotlight、Settings 和 Notification 图标尺寸\r\n\r\n| Device or context         | Spotlight icon size             | Settings icon size            | Notification icon size        |\r\n| :------------------------ | :------------------------------ | :---------------------------- | :---------------------------- |\r\n| iPhone                    | 120px × 120px (40pt × 40pt @3x) | 87px × 87px (29pt × 29pt @3x) | 60px × 60px (20pt × 20pt @3x) |\r\n|                           | 80px × 80px (40pt × 40pt @2x)   | 58px × 58px (29pt × 29pt @2x) | 40px × 40px (20pt × 20pt @2x) |\r\n| iPad Pro, iPad, iPad mini | 80px × 80px (40pt × 40pt @2x)   | 58px × 58px (29pt × 29pt @2x) | 40px × 40px (20pt × 20pt @2x) |\r\n\r\n### 注意事项\r\n\r\n关于 `Settings` 图标的特别说明：请勿手动为其添加边框或遮罩效果，因为系统会自动为图标添加 1 像素宽的描边，以确保图标在白色背景上能够清晰显示。这样的自动处理可以保证图标在系统设置界面中有统一的展示效果。\r\n\r\n## 最后\r\n\r\n本文详细介绍了 `iOS` 动态更换应用图标的实现方法，从准备图标文件、配置 `Info.plist` 到编写代码，为开发者提供了完整的技术指南。\r\n\r\n虽然这个功能有一些使用限制，但它为提升用户体验提供了灵活的解决方案。通过合理运用这一功能，我们可以在节假日或营销活动期间，无需发版即可动态更新应用图标，让应用界面更具吸引力和时效性。\r\n\r\n希望这篇文章能帮助开发者更好地运用这一功能，为用户带来更丰富的应用体验。\r\n","number":14,"labels":{"nodes":[{"id":"LA_kwDONzrbkM8AAAAB4nYwyw","name":"iOS","url":"https://github.com/onnttf/blog/labels/iOS"}]},"category":{"id":"DIC_kwDONzrbkM4Cmnbf","name":"Show and tell","slug":"show-and-tell","emoji":":raised_hands:","emojiHTML":"<div>🙌</div>"},"author":{"login":"onnttf"},"authorAssociation":"OWNER","createdAt":"2018-07-10T08:00:00Z","updatedAt":"2025-02-03T15:41:40Z","repository":{"id":"R_kgDONzrbkA","url":"https://github.com/onnttf/blog"},"url":"https://github.com/onnttf/blog/discussions/14","jsonFilePath":"discussions/14-D_kwDONzrbkM4AeLdH.json","markdownFilePath":"2018/07/14-D_kwDONzrbkM4AeLdH.md"}

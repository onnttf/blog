{"id":"D_kwDONzrbkM4AeLcQ","title":"从零开始搭建 Hexo 博客","body":"[Hexo](https://hexo.io) 是一款高效、简洁且强大的静态博客框架，广受开发者喜爱。本文将带你从零开始，完成 `Hexo` 博客的安装与部署，轻松创建属于你的个人博客！\r\n\r\n## 准备工作\r\n\r\n`Hexo` 需要下列程序的支持。请确保你已安装这些程序：\r\n\r\n- `Node.js`\r\n\r\n  (`Node.js` 版本需不低于 `10.13`，建议使用 `Node.js 12.0` 及以上版本)\r\n\r\n- `Git`\r\n\r\n如果您的电脑中已经安装了上述程序，您可以直接前往下一节。\r\n\r\n## 安装 `Hexo` 脚手架\r\n\r\n```bash\r\n~/Desktop/blog\r\n❯ npm install -g hexo-cli\r\n\r\nadded 54 packages, and audited 55 packages in 8s\r\n\r\n14 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 0 vulnerabilities\r\n```\r\n\r\n安装完成后，通过 `hexo -v` 检查是否安装成功：\r\n\r\n```bash\r\n~/Desktop/blog\r\n❯ hexo -v\r\nhexo-cli: 4.3.2\r\nos: darwin 24.1.0 15.1.1\r\n\r\nnode: 16.20.2\r\nv8: 9.4.146.26-node.26\r\nuv: 1.49.2\r\nzlib: 1.2.12\r\nbrotli: 1.1.0\r\nares: 1.34.2\r\nmodules: 93\r\nnghttp2: 1.64.0\r\nnapi: 8\r\nllhttp: 6.0.11\r\nopenssl: 3.4.0\r\ncldr: 46.0\r\nicu: 76.1\r\ntz: 2024b\r\nunicode: 16.0\r\n```\r\n\r\n## 初始化 `Hexo` 博客\r\n\r\n通过终端进入您想要创建博客的文件夹，执行初始化命令：\r\n\r\n```bash\r\n~/Desktop/blog\r\n❯ hexo init\r\nINFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git\r\nwarning hexo > warehouse > cuid@2.1.8: Cuid and other k-sortable and non-cryptographic ids (Ulid, ObjectId, KSUID, all UUIDs) are all insecure. Use @paralleldrive/cuid2 instead.\r\nwarning hexo-renderer-marked > jsdom > abab@2.0.6: Use your platform's native atob() and btoa() methods instead\r\nwarning hexo-renderer-marked > jsdom > data-urls > abab@2.0.6: Use your platform's native atob() and btoa() methods instead\r\nwarning hexo-renderer-marked > jsdom > domexception@4.0.0: Use your platform's native DOMException instead\r\nwarning hexo-renderer-stylus > stylus > glob@7.2.3: Glob versions prior to v9 are no longer supported\r\nwarning hexo-renderer-stylus > stylus > glob > inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\r\nINFO  Start blogging with Hexo!\r\n```\r\n\r\n初始化完成后，文件夹结构如下：\r\n\r\n```bash\r\n~/Desktop/blog\r\n❯ tree -L 1\r\n.\r\n├── _config.landscape.yml\r\n├── _config.yml\r\n├── node_modules\r\n├── package.json\r\n├── scaffolds\r\n├── source\r\n├── themes\r\n└── yarn.lock\r\n\r\n5 directories, 4 files\r\n```\r\n\r\n- _config.yml\r\n\r\n  网站的配置文件。您可以在此配置大部分的参数，如网站标题、网站的关键词等。\r\n\r\n- package.json\r\n\r\n  应用程序的依赖信息。\r\n  包括 `EJS`、`Stylus` 和 `Markdown` 渲染引擎，这些已默认安装。如果不需要，您可以根据需求自由移除它们。\r\n\r\n- scaffolds\r\n\r\n  模版文件夹。当您新建文章时，`Hexo` 会根据 `scaffold` 来创建文件。\r\n\r\n- source\r\n\r\n  资源文件夹。用于存放用户资源。除了 `_posts` 文件夹之外，所有以 `_`（下划线）开头的文件/文件夹以及隐藏文件将被忽略。Markdown 和 HTML 文件会被解析并放到 `public` 文件夹，而其他文件会被拷贝过去。\r\n\r\n- themes\r\n\r\n  主题文件夹。`Hexo` 会根据主题来生成静态页面。\r\n\r\n## 预览博客\r\n\r\n在终端中，执行 `hexo server` 启动服务器，即可看到你的博客初始界面！\r\n\r\n默认情况下，访问网址为：<http://localhost:4000/>。\r\n\r\n```bash\r\n❯ hexo server\r\nINFO  Validating config\r\nINFO  Start processing\r\nINFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.\r\n```\r\n\r\n## 部署博客到 GitHub Pages\r\n\r\n使用 `GitHub Actions` 将博客部署到 `GitHub Pages`。\r\n\r\n**请注意**：在以下步骤中，所有涉及到 GitHub 用户名的地方，请将 `username` 替换为你的 `GitHub` 用户名。\r\n\r\n1. 在 `GitHub` 中，创建一个名为 `username.github.io` 的仓库\r\n2. 前往仓库的设置页面，进入 `Settings > Pages`，将 `Source` 中的选项更改为 `GitHub Actions`，然后保存设置\r\n3. 创建 `.github/workflows/pages.yml` 文件，并填入以下内容：\r\n\r\n   ```text\r\n   name: Pages\r\n\r\n   on:\r\n      push:\r\n         branches:\r\n            - main # default branch\r\n\r\n   jobs:\r\n      build:\r\n         runs-on: ubuntu-latest\r\n         steps:\r\n            - uses: actions/checkout@v4\r\n            with:\r\n               token: ${{ secrets.GITHUB_TOKEN }}\r\n               # If your repository depends on submodule, please see: https://github.com/actions/checkout\r\n               submodules: recursive\r\n            - name: Use Node.js 20\r\n            uses: actions/setup-node@v4\r\n            - name: Cache NPM dependencies\r\n            uses: actions/cache@v4\r\n            with:\r\n               path: node_modules\r\n               key: ${{ runner.OS }}-npm-cache\r\n               restore-keys: |\r\n                  ${{ runner.OS }}-npm-cache\r\n            - name: Install Dependencies\r\n            run: npm install\r\n            - name: Build\r\n            run: npm run build\r\n            - name: Upload Pages artifact\r\n            uses: actions/upload-pages-artifact@v3\r\n            with:\r\n               path: ./public\r\n      deploy:\r\n         needs: build\r\n         permissions:\r\n            pages: write\r\n            id-token: write\r\n         environment:\r\n            name: github-pages\r\n            url: ${{ steps.deployment.outputs.page_url }}\r\n         runs-on: ubuntu-latest\r\n         steps:\r\n            - name: Deploy to GitHub Pages\r\n            id: deployment\r\n            uses: actions/deploy-pages@v4\r\n   ```\r\n\r\n4. 将博客文件夹中的文件推送到该仓库\r\n5. 当 action 运行完成后，前往 <https://username.github.io> 查看已部署的博客\r\n\r\n### 一键部署\r\n\r\n为了方便快捷地将本地博客发布到 `GitHub Pages`，我们可以安装 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git) 部署工具。通过该工具，可以直接将博客发布到 `GitHub Pages`，实现快速部署。\r\n\r\n1. 在博客的根目录下执行以下命令来安装 `hexo-deployer-git` 插件\r\n\r\n   ```bash\r\n   ~/Desktop/blog\r\n   ❯ npm install hexo-deployer-git --save\r\n   (node:15001) ExperimentalWarning: CommonJS module /usr/local/lib/node_modules/npm/node_modules/debug/src/node.js is loading ES Module /usr/local/lib/node_modules/npm/node_modules/supports-color/index.js using require().\r\n   Support for loading ES Module in require() is an experimental feature and might change at any time\r\n   (Use `node --trace-warnings ...` to show where the warning was created)\r\n\r\n   added 9 packages, and audited 232 packages in 5s\r\n\r\n   29 packages are looking for funding\r\n   run `npm fund` for details\r\n\r\n   found 0 vulnerabilities\r\n   ```\r\n\r\n2. 修改 `_config.yml` 文件，添加以下配置\r\n\r\n   ```text\r\n   deploy:\r\n      type: git\r\n      repo: https://github.com/<username>/<project>\r\n      # example, https://github.com/onnttf/onnttf.github.io\r\n      branch: gh-pages\r\n   ```\r\n\r\n3. 执行 `hexo clean && hexo deploy` 即可\r\n\r\n## 日常更新博客\r\n\r\n当你写了新的博客文章，或是修改了博客的主题后，只需要通过终端进入本地博客的根目录，执行以下命令来更新并部署博客：\r\n\r\n```bash\r\nhexo clean && hexo deploy\r\n```\r\n\r\n执行完命令后，所有在本地的修改都会部署到 `GitHub Pages`，你的博客将会自动更新。\r\n\r\n## 最后\r\n\r\n让我们持续更新博客内容，分享我们的所思所想！\r\n","number":5,"labels":{"nodes":[]},"category":{"id":"DIC_kwDONzrbkM4Cmnbf","name":"Show and tell","slug":"show-and-tell","emoji":":raised_hands:","emojiHTML":"<div>🙌</div>"},"author":{"login":"onnttf"},"authorAssociation":"OWNER","createdAt":"2017-11-26T08:00:00Z","updatedAt":"2025-02-03T15:30:16Z","repository":{"id":"R_kgDONzrbkA","url":"https://github.com/onnttf/blog"},"url":"https://github.com/onnttf/blog/discussions/5","jsonFilePath":"discussions/5-D_kwDONzrbkM4AeLcQ.json","markdownFilePath":"2017/11/5-D_kwDONzrbkM4AeLcQ.md"}

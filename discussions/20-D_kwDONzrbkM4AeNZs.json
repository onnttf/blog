{"id":"D_kwDONzrbkM4AeNZs","title":"如何保持 SSH 服务不掉线","body":"在日常工作中，保持 `SSH` 服务不掉线是一个非常重要的需求。常见保持 `SSH` 服务不掉线的方法有两种：\r\n\r\n1. 服务端发送心跳包\r\n2. 客户端发送心跳包\r\n\r\n这两种方案都能有效解决 `SSH` 连接断开的问题。接下来，我们将深入探讨这两种方案的具体配置方法。\r\n\r\n## 服务端发送心跳包\r\n\r\n1. 登录服务器后，打开配置文件\r\n\r\n   ```bash\r\n   sudo vim /etc/ssh/sshd_config\r\n   ```\r\n\r\n2. 检查并配置心跳包相关参数\r\n\r\n   1. 找到以下两个关键配置项（如有 `#`，需要去掉）\r\n\r\n      - `ClientAliveInterval` - 控制服务器向客户端发送心跳包的时间间隔\r\n      - `ClientAliveCountMax` - 设置心跳包检测失败的最大重试次数\r\n\r\n   2. 推荐的参数配置\r\n\r\n      ```ini\r\n      # 每 30 秒发送一次心跳包检测，可以及时发现连接异常\r\n      ClientAliveInterval 30\r\n      # 允许连续 3 次心跳包失败，在网络波动时仍保持稳定\r\n      ClientAliveCountMax 3\r\n      ```\r\n\r\n3. 保存配置文件\r\n\r\n   - 按 `ESC` 键退出编辑模式\r\n   - 输入 `:wq` 保存文件并退出\r\n   - 如遇到权限问题，使用 `:w!` 强制保存\r\n\r\n4. 重启 `SSH` 服务应用新配置\r\n\r\n   ```bash\r\n   sudo systemctl restart ssh\r\n   ```\r\n\r\n> 核心参数详解：\r\n>\r\n> **ClientAliveInterval**\r\n>\r\n> - 功能：服务器定时发送心跳包检测客户端是否存活\r\n> - 单位：秒（s）\r\n> - 默认：`0`（禁用）\r\n> - 建议：`30` 秒（平衡性能与及时性）\r\n> - 说明：超过设定时间未收到客户端响应，则发送心跳包\r\n>\r\n> **ClientAliveCountMax**\r\n>\r\n> - 功能：允许心跳检测失败的最大次数\r\n> - 默认：`3`\r\n> - 建议：`3` 次（可靠性与资源消耗的最佳平衡）\r\n> - 作用：防止临时网络波动造成连接断开\r\n> - 说明：实际最大超时时间 = 间隔 × 次数\r\n\r\n## 客户端发送心跳包\r\n\r\n1. 进入客户端的 `SSH` 配置目录\r\n\r\n   ```bash\r\n   cd ~/.ssh/\r\n   ```\r\n\r\n2. 打开配置文件\r\n\r\n   ```bash\r\n   vim config\r\n   ```\r\n\r\n3. 添加以下心跳配置参数并保存\r\n\r\n   ```ini\r\n   # 配置客户端每 30 秒发送一次心跳包\r\n   ServerAliveInterval 30\r\n   # 允许最多 120 次重试\r\n   ServerAliveCountMax 120\r\n   ```\r\n\r\n4. 保存并退出\r\n\r\n   - 按 `ESC` 键退出编辑模式\r\n   - 输入 `:wq` 保存并退出\r\n\r\n> 核心参数说明：\r\n>\r\n> **ServerAliveInterval**\r\n>\r\n> - 功能：客户端向服务器发送心跳的时间间隔\r\n> - 单位：秒（s）\r\n> - 默认值：`0`（表示禁用）\r\n> - 建议值：`20-60` 秒\r\n> - 注意：设置过小会增加服务器负载\r\n>\r\n> **ServerAliveCountMax**\r\n>\r\n> - 功能：客户端允许心跳检测失败的最大次数\r\n> - 默认值：`3`\r\n> - 建议值：根据需要设置，通常 `100-999`\r\n> - 说明：实际最大保持时间 = 间隔 × 次数\r\n\r\n## 如何选择最佳方案\r\n\r\n两种方案各有优势，选择哪种主要取决于您的具体使用场景：\r\n\r\n- **一台服务器连接多个客户端**\r\n\r\n  推荐服务端心跳方案，只需在服务器配置一次，对所有客户端生效\r\n\r\n- **一台客户端连接多台服务器**\r\n\r\n  推荐客户端心跳方案，只需在客户端配置一次，对所有服务器连接生效\r\n","number":20,"labels":{"nodes":[]},"category":{"id":"DIC_kwDONzrbkM4Cmnbf","name":"Show and tell","slug":"show-and-tell","emoji":":raised_hands:","emojiHTML":"<div>🙌</div>"},"author":{"login":"onnttf"},"authorAssociation":"OWNER","createdAt":"2020-03-01T08:00:00Z","updatedAt":"2025-02-05T11:00:10Z","repository":{"id":"R_kgDONzrbkA","url":"https://github.com/onnttf/blog"},"url":"https://github.com/onnttf/blog/discussions/20","jsonFilePath":"discussions/20-D_kwDONzrbkM4AeNZs.json","markdownFilePath":"2020/3/20-D_kwDONzrbkM4AeNZs.md"}
